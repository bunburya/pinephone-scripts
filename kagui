#!/bin/sh

# Kagui - a Kdialog APK GUI
appname="Kagui"

errors=0
# Require kdialog
if [ ! -f "$(which kdialog 2>/dev/null)" ]; then
	echo "ERROR: $appname requires kdialog to run; please install it and try again."
	let errors++
fi

# Require apk (obviously)
if [ ! -f "$(which apk 2>/dev/null)" ]; then
	echo "ERROR: $appname requires apk to run; please install it and try again."
	let errors++
fi

if [ $errors -ne 0 ]; then
	echo "Exiting with $errors fatal errors."
	exit 1
fi

err_file="/tmp/${appname}_err"
sudo_passwd=""

main_menu() {
	if [ -f "$err_file" ]; then
		rm "$err_file"
	fi
	opt="$(kdialog --title "$appname" --menu "Welcome to $appname.  Select an option below" \
		"add" "Search / install packages" \
		"del" "Search / remove installed packages" \
		"exit" "Exit")"
	case "$opt" in
		"add") un_install "add" ;;
		"del") un_install "del" ;;
		"exit") exit 0 ;;
		"") exit 0 ;;
		*) echo "$opt not implemented"
	esac
}

un_install() {
    # Call with "add" for install, "del" for uninstall
	
    if [ "$1" = "add" ]; then
		apk_cmd="apk add --no-progress"
		search_cmd="apk search -q"
		title="Install"
		prog_msg="Installing..."
	elif [ "$1" = "del" ]; then
		apk_cmd="apk del"
		search_cmd="apk info"
		title="Uninstall"
		prog_msg="Uninstalling..."
	else
		echo "Bad argument $1"
		return 1
	fi
	
	search_term="$(search_dialog)"
	if [ "$?" -eq 1]; then
		return 1
	fi
	packages="$(kdialog --title "$appname > $title" --checklist "Choose package(s):" \
		$($search_cmd | grep "$search_term" | awk '{print $1, $1, "off"}') | sed 's/"//g')"
	if [ -z "$packages" ]; then
		return 1
	fi
	passwd="$(get_passwd)"
	echo "$passwd" | sudo -S $apk_cmd $packages 2>"$err_file" | track_progress "$prog_msg"
	_err="$(cat "$err_file" 2>/dev/null)"
	if [ ! -z "$_err" ]; then
		kdialog --title "$appname > Error" --textinputbox "apk returned error with following output:" "$_err"
		return 1
	fi
	return 0
}

search_dialog() {
	# Generic function to get search term from user and output it to stdout
	search_term="$(kdialog --title "$appname > Search" --inputbox "Enter search term (blank to return all)")"
	if [ "$?" -eq 0 ]; then
		echo "$search_term"
		return 0
	else
		return 1
	fi
}

get_passwd() {
	if [ -z "$sudo_passwd" ]; then
		sudo_passwd="$(kdialog --title "$appname > Enter password" --password "Enter your password for sudo.")"
	fi
	echo "$sudo_passwd"
}

track_progress() {
	#tracker="$(kdialog --progressbar "$1" 100)"
	while STATUS= read -r line; do
		_err="$(cat "$err_file" 2>/dev/null)"
		if [ -z "$_err" ]; then
			# No errors found
			step_number="$(echo "$line" | grep -o "^([[:digit:]]\+/[[:digit:]]\+)")"
			if [ ! -z "$step_number" ]; then
				# Line begining with (X/YY) found, indicating that progress is being made
				# (eg, package is being downloaded or deleted)
				if [ -z "$tracker" ]; then
					tracker="$(kdialog --progressbar "$1" 100)"
				fi
				qdbus $tracker Set "" value "$(echo "$step_number*100" | bc -l | awk -F "." '{print $1}')"
			fi
			if [ ! -z "$tracker" ]; then
				qdbus $tracker setLabelText "$line"
			fi
		else
			# Errors found
			echo "$line" >> "$err_file"
			continue
		fi
	done
	if [ ! -z "$tracker" ]; then
		qdbus $tracker close
	fi
	return 0
}

while true; do
	main_menu
done
